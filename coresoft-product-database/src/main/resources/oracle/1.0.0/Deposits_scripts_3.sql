---- TABLE creation scripts---

CREATE TABLE TRANSACTION_POSTLATER(
ACCOUNT_ID		VARCHAR2(120),
ACCOUNT_NUMBER		VARCHAR2(120),
AMOUNT			NUMBER(20,5),
CHEQUE			NUMBER(10,0),
DESCRIPTION		VARCHAR2(400),
EFFECTIVE_DATE		DATE,
ENTRY_DATE		DATE,
EVENT_ID		NUMBER(15,0),
FILE_NAME		VARCHAR2(200),
INSTITUTION_ID		VARCHAR2(20),
PAYMENT_ID		NUMBER(15,0),
POST_DATE		DATE,
POST_STATUS		VARCHAR2(60),
SOURCE_NAME		VARCHAR2(60),
TRACE			NUMBER(10,0),
TRANS_CODE		NUMBER(10,0),
TRANSACTION_ID		NUMBER(20,0) 
);

CREATE TABLE TRANSACTION_POSTTODAY(
ACCOUNT_ID		VARCHAR2(120),
ACCOUNT_NUMBER		VARCHAR2(120),
AMOUNT			NUMBER(20,5),
CHEQUE			NUMBER(10,0),
DESCRIPTION		VARCHAR2(400),
EFFECTIVE_DATE		DATE,
ENTRY_DATE		DATE,
EVENT_ID		NUMBER(15,0),
FILE_NAME		VARCHAR2(200),
INSTITUTION_ID		VARCHAR2(20),
PAYMENT_ID		NUMBER(15,0),
POST_DATE		DATE,
POST_STATUS		VARCHAR2(60),
SOURCE_NAME		VARCHAR2(60),
TRACE			NUMBER(10,0),
TRANS_CODE		NUMBER(10,0),
TRANSACTION_ID		NUMBER(20,0) 
);

CREATE TABLE TRANSACTION_FILE ( 
TRANSACTION_FILE_ID    	VARCHAR2(60),
CONFIRMED_BY	VARCHAR2(60) NULL,
CONFIRMATION_DATE  DATE,
WHO_TRANSFERED_TO_WAREHOUSE VARCHAR2(60),
WHEN_TRANSFERED_TO_WAREHOUSE DATE,
VALIDATION_STATUS NUMBER(1),
IS_IN_BALANCE NUMBER(1),
NUMBER_OF_BATCHES NUMBER(15,0),
computed_total_debits NUMBER(10,0), 
computed_total_credits NUMBER(10,0),
computed_total_amount NUMBER(10,0) ,
given_total_debits NUMBER(10,0), 
given_total_credits NUMBER(10,0),
given_total_amount NUMBER(10,0),
INSTITUTION_ID VARCHAR2(10) 
);

CREATE TABLE TRANSACTION_BATCH ( 
BATCH_ID    	VARCHAR2(60), 
BATCH_NUMBER	VARCHAR2(60), 
TRAN_BATCH_HEADER_RECORD NUMBER(20,0), 
computed_total_debits NUMBER(10,0), 
computed_total_credits NUMBER(10,0),
computed_total_amount NUMBER(10,0), 
given_total_debits NUMBER(10,0), 
given_total_credits NUMBER(10,0),
given_total_amount NUMBER(10,0),
TRANSACTION_FILE_ID    	VARCHAR2(60)
);

CREATE TABLE TRAN_INSTITUTION_SUMMARY (
TRANSACTION_FILE_ID VARCHAR2(60),
INSTITUTION_ID VARCHAR2(60),
computed_total_debits NUMBER(10,0),
computed_total_credits NUMBER(10,0),
computed_total_amount NUMBER(10,0) 
);

---table constraints scripts---

ALTER TABLE TRANSACTION_POSTTODAY
ADD CONSTRAINT fk_POSTTODAY_TRANSACTION FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID);

ALTER TABLE TRANSACTION_POSTLATER
ADD CONSTRAINT fk_POSTLATER_TRANSACTION FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID);

ALTER TABLE TRANSACTION_POSTTODAY
ADD CONSTRAINT fk_TODAY_TRAN_INSTITUTION_ID FOREIGN KEY (INSTITUTION_ID) REFERENCES INSTITUTION(INSTITUTION_ID); 
 
ALTER TABLE TRANSACTION_POSTLATER
ADD CONSTRAINT fk_LATER_TRAN_INSTITUTION_ID FOREIGN KEY (INSTITUTION_ID) REFERENCES INSTITUTION(INSTITUTION_ID); 

ALTER TABLE TRANSACTION_FILE
ADD CONSTRAINT fk_FILE_TRAN_INSTITUTION_ID FOREIGN KEY (INSTITUTION_ID) REFERENCES INSTITUTION(INSTITUTION_ID); 


ALTER TABLE TRANSACTION_POSTTODAY
ADD CONSTRAINT POSTTODAY_TRANSACTION_ID_PK PRIMARY KEY(TRANSACTION_ID);

ALTER TABLE TRANSACTION_POSTLATER
ADD CONSTRAINT TRANSACTION_ID_PK PRIMARY KEY(TRANSACTION_ID);

ALTER TABLE TRANSACTION_FILE
ADD CONSTRAINT TRANSACTION_FILE_ID_PK PRIMARY KEY(TRANSACTION_FILE_ID);

ALTER TABLE TRANSACTION_BATCH
ADD CONSTRAINT TRANSACTION_BATCH_ID_PK PRIMARY KEY(BATCH_ID);

ALTER TABLE TRANSACTION_BATCH 
ADD CONSTRAINT fk_TRA_BATCH_INT FOREIGN KEY(TRANSACTION_FILE_ID) REFERENCES TRANSACTION_FILE(TRANSACTION_FILE_ID);

ALTER TABLE TRAN_INSTITUTION_SUMMARY
ADD CONSTRAINT fk_TRAN_INS_SUM_FILE_ID FOREIGN KEY (TRANSACTION_FILE_ID) REFERENCES TRANSACTION_FILE(TRANSACTION_FILE_ID); 

ALTER TABLE TRAN_INSTITUTION_SUMMARY
ADD CONSTRAINT fk_TRAN_INS_SUM_INT_ID FOREIGN KEY (INSTITUTION_ID) REFERENCES INSTITUTION(INSTITUTION_ID);

------------SEQUENCES--------
CREATE SEQUENCE POSTTODAY_TRANSACTION_ID_SEQ
    INCREMENT BY 1
    START WITH 101
    NOMAXVALUE
    NOMINVALUE
    NOCYCLE
    ORDER;


CREATE SEQUENCE POSTLATER_TRANSACTION_ID_SEQ
    INCREMENT BY 1
    START WITH 101
    NOMAXVALUE
    NOMINVALUE
    NOCYCLE
    ORDER;

CREATE SEQUENCE TRANSACTION_BATCH_ID_SEQ
    INCREMENT BY 1
    START WITH 101
    NOMAXVALUE
    NOMINVALUE
    NOCYCLE
    ORDER;

CREATE TABLE TRAN_CODE_LOOKUP ( 
	UNIQUE_ID      	NUMBER(5,0) NOT NULL,
	TRAN_CODE      	VARCHAR2(10) NULL,
	DEBIT_OR_CREDIT	VARCHAR2(1) NULL,
	ACCOUNT_TYPE_ID	VARCHAR2(30) NULL,
	DESCRIPTION    	VARCHAR2(1000) NULL 
	);

CREATE UNIQUE INDEX ENTRY_TYPE_UK
	ON TRAN_CODE_LOOKUP(TRAN_CODE, ACCOUNT_TYPE_ID);
CREATE UNIQUE INDEX ENTRY_TYPE_PK
	ON TRAN_CODE_LOOKUP(UNIQUE_ID);
ALTER TABLE TRAN_CODE_LOOKUP
	ADD ( CONSTRAINT ENTRY_TYPE_PK
	PRIMARY KEY (UNIQUE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE );
ALTER TABLE TRAN_CODE_LOOKUP
	ADD ( CONSTRAINT ENTRY_TYPE_UK
	UNIQUE (TRAN_CODE, ACCOUNT_TYPE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE );

ALTER TABLE ACCOUNT_HISTORY_ITEM  modify ( CURRENCY   NULL );

alter table ACTIVITY_LOG  add ( INSTITUTION_temp number(5));
alter table ACTIVITY_LOG  add ( BRANCH_TEMP number(10));

UPDATE ACTIVITY_LOG  SET INSTITUTION_TEMP= INSTITUTION;
UPDATE ACTIVITY_LOG  SET BRANCH_TEMP= BRANCH;

ALTER TABLE  ACTIVITY_LOG DROP COLUMN  INSTITUTION;
ALTER TABLE ACTIVITY_LOG DROP COLUMN BRANCH;

ALTER TABLE ACTIVITY_LOG  RENAME  COLUMN INSTITUTION_TEMP TO INSTITUTION;
ALTER TABLE ACTIVITY_LOG  RENAME COLUMN  BRANCH_TEMP TO BRANCH;
alter table institution_transcode_lookup add(accounting_entry_type VARCHAR2(30));

alter table INSTITUTION_TRANSCODE_LOOKUP 
 add constraint itl_entty_inst_acctypeid  unique(account_type_id , INSTITUTION_ID , ENTRY_TYPE);


